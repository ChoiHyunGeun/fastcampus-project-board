<?xml version="1.0"?>
<thlogic>
    <!--  해당 파일명이 index.th.xml이라서 파일명이 index인 파일을 찾아서 header라는 엘리먼트를 찾아서 이 코드를 삽입해줌  -->
    <!--  만약 header라는 엘리먼트가 많을 경우 id로 설정해서 #id명으로 설정해서 id를 맵핑하게끔 구현하면 됨  -->
    <attr sel="#header" th:replace="header :: header"/>

    <!--root경로에 있는 footer 파일에서 footer 엘리먼트를 찾아가라는 의미. 그 엘리먼트 내용으로 replace 한다는 말-->
    <attr sel="#footer" th:replace="footer :: footer" />

    <attr sel="nav" th:replace="navigator::nav"/>

    <attr sel="#search-form" th:action="@{/articles}" th:method="get" />
    <attr sel="#search-type" th:remove="all-but-first">
        <attr sel="option[0]"
              th:each="searchType : ${searchTypes}"
              th:value="${searchType.name}"
              th:text="${searchType.description}"
              th:selected="${param.searchType != null && (param.searchType.toString == searchType.name)}"
        />
        <!-- th:selected="${param.searchType != null && (param.searchType.toString == searchType.name)}"
             이 코드는
             1. searchType을 "해시태그"로 설정하고 "java" 검색
             2. 그 다음 검색할 땐 "스프링" 검색
             3. 이 때 searchType은 동일하게 "해시태그"로 선택되어 있어야하는데 그 기능을 정의한 것

             > 이 코드가 없으면 "java" 검색하고 searchType이 자동으로 default 옵션으로 변경되어 검색이 불편해 질 것임
        -->
    </attr>

    <!--sec:authorize="isAuthenticated()" > security관련 기능. 인증된 사용자만 이 컴포넌트를 사용할 수 있음(visible 포함인 듯)-->
    <attr sel="#write-article" sec:authorize="isAuthenticated()" th:href="@{/articles/form}" />

    <attr sel="#article-table">
<!--        <attr sel="thead">-->
<!--            <attr sel="tr">-->
<!--                <attr sel="th.title/a" th:href="@{/articles(-->
<!--                page=${articles.number},-->
<!--                sort='title' + (*{articles.sort.getOrderFor('title')} != null ? (*{articles.sort.getOrderFor('title').direction.name} != 'DESC' ? ',desc' : '') : '')-->
<!--                )}"/>-->
<!--                <attr sel="th.hashtag/a" th:href="@{/articles(-->
<!--                page=${articles.number},-->
<!--                sort='hashtag' + (*{articles.sort.getOrderFor('hashtag')} != null ? (*{articles.sort.getOrderFor('hashtag').direction.name} != 'DESC' ? ',desc' : '') : '')-->
<!--                )}"/>-->
<!--                <attr sel="th.create-user/a" th:href="@{/articles(-->
<!--                page=${articles.number},-->
<!--                sort='createUser' + (*{articles.sort.getOrderFor('createUser')} != null ? (*{articles.sort.getOrderFor('createUser').direction.name} != 'DESC' ? ',desc' : '') : '')-->
<!--                )}"/>-->
<!--                <attr sel="th.create-date/a" th:href="@{/articles(-->
<!--                page=${articles.number},-->
<!--                sort='createDate' + (*{articles.sort.getOrderFor('createDate')} != null ? (*{articles.sort.getOrderFor('createDate').direction.name} != 'DESC' ? ',desc' : '') : '')-->
<!--                )}"/>-->
<!--            </attr>-->
<!--        </attr>-->

        <attr sel="tbody">
            <attr sel="tr" th:each="article : ${articles}">
                <attr sel="td.title/a" th:text="${article.title}" th:href="@{'/articles/' + ${article.id}}"/>
                <attr sel="td.hashtag" th:text="${article.hashtag}" />
                <attr sel="td.user-id" th:text="${article.nickname}" />
                <attr sel="td.createDate/time" th:datetime="${article.createDate}" th:text="${#temporals.format(article.createDate, 'yyyy-MM-dd')}"/>
            </attr>
        </attr>
    </attr>
</thlogic>